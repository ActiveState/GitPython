[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "--cov=git --cov-report=term --disable-warnings -ra"
filterwarnings = "ignore::DeprecationWarning"
python_files = "test_*.py"
tmp_path_retention_policy = "failed"
testpaths = "test"  # Space separated list of paths from root e.g test tests doc/testing.
# --cov   coverage
# --cov-report term  # send report to terminal term-missing -> terminal with line numbers  html  xml
# --cov-report term-missing # to terminal with line numbers
# --cov-report html:path  # html file at path
# --maxfail  # number of errors before giving up
# -disable-warnings  # Disable pytest warnings (not codebase warnings)
# -rfE  # default test summary: list fail and error
# -ra   # test summary: list all non-passing (fail, error, skip, xfail, xpass)
# --ignore-glob=**/gitdb/*  # ignore glob paths
# filterwarnings ignore::WarningType  # ignores those warnings

[tool.mypy]
python_version = "3.7"
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
# warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true
implicit_reexport = true
# strict = true
# TODO: Remove when 'gitdb' is fully annotated.
exclude = ["^git/ext/gitdb"]
[[tool.mypy.overrides]]
module = "gitdb.*"
ignore_missing_imports = true

[tool.coverage.run]
source = ["git"]

[tool.coverage.report]
include = ["*/git/*"]
omit = ["*/git/ext/*"]

[tool.black]
line-length = 120
target-version = ["py37"]
extend-exclude = "git/ext/gitdb"

[tool.ruff]
target-version = "py37"
line-length = 120
# Exclude a variety of commonly ignored directories.
exclude = [
    "git/ext/",
    "doc",
    "build",
    "dist",
]
# Enable Pyflakes `E` and `F` codes by default.
lint.select = [
    "E",
    "W", # see: https://pypi.org/project/pycodestyle
    "F", # see: https://pypi.org/project/pyflakes
#    "I", #see: https://pypi.org/project/isort/
#    "S", # see: https://pypi.org/project/flake8-bandit
#    "UP", # see: https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
lint.extend-select = [
    "A",    # see: https://pypi.org/project/flake8-builtins
    "B",    # see: https://pypi.org/project/flake8-bugbear
    "C4",   # see: https://pypi.org/project/flake8-comprehensions
    "TCH004", # see: https://docs.astral.sh/ruff/rules/runtime-import-in-type-checking-block/
]
lint.ignore = [
    "E203", "W503"
]
lint.ignore-init-module-imports = true
lint.unfixable = ["F401"]

#[tool.ruff.lint.per-file-ignores]
#"setup.py" = ["ANN202", "ANN401"]
#"docs/source/conf.py" = ["A001", "D103"]
#"src/**" = ["ANN401"]
#"tests/**" = ["S101", "ANN001", "ANN201", "ANN202", "ANN401"]
